Description: FridayHITT AWS Cloud Formation Infrastruture Template

Parameters:
  InstanceTypeParam:
    Description: Default value is t2.micro
    Type: String
    Default: t2.micro

  ImageIDParam:
    Description: Default value is ami-0fff1b9a61dec8a5f
    Type: String
    Default: ami-0fff1b9a61dec8a5f

Resources:
  # Create VPC -> HITTVPC and VPC Number, in this case VPC1
  HITTVPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 15.0.0.0/16 # Allocate 65531 usable IPs for this VPC , both Public and Private Subnet including Internet GW (5 IPs reserved by AWS)
      EnableDnsSupport: true # Follow default value
      EnableDnsHostnames: true # Follow default value
      Tags:
        - Key: Name # Tag VPC Name
          Value: HITT-VPC-1 # Value for HITT-VPC-1 for more clear reading

  # Create  Public Subnet HITTPublicSubnet  and Subnet Number, in this case Public Subnet1
  HITTPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HITTVPC1 # Attached to HITTVPC1 
      CidrBlock: 15.0.0.0/23 # Allocate 507 usable IPs for this public subnet (5 IPs reserved by AWS)
      AvailabilityZone: us-east-1a # AZ for subnet US-East(N.Virginia)
      MapPublicIpOnLaunch: true # Automatically assign public IPs to EC2 instances
      Tags:
        - Key: Name # Tag Public Subnet Name
          Value: HITT-VPC1-Public-Subnet-1
    # Value for HITTVPC1-Public-Subnet-1  more clear reading
    # NOTE THERE IS RESERVED ROOM IPS for Public Subnet Future Expansion (Total 4,056 usable IP addresses for public subnet)


    # Create  Private Subnet HITTPublicSubnet  and Subnet Number, in this case Private Subnet1
  HITTPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref HITTVPC1 # Attached to HITTVPC1 
      CidrBlock: 15.0.18.0/22 # Allocate 1019 usable IPs for this private subnet (5 IPs reserved by AWS)
      AvailabilityZone: us-east-1a # AZ for subnet US-East(N.Virginia)
      Tags:
        - Key: Name # Tag Private Subnet Name
          Value: HITT-VPC1-Private-Subnet-1 # Tage Value for HITTVPC1-Public-Subnet-1  more clear reading
    # Create Internet Gateway and  Number, in this case HITTInternetGateway1
  HITTInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name # Tag Internet Gateway Name
          Value: HITT-Internet-Gateway # Tage Value for HITT-Internet-Gateway-1  more clear reading
    # Attached HITTInternetGateway1 into HITTVPC1
  HITTAttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref HITTVPC1 # Reference to VPC -> HITTVPC1
      InternetGatewayId: !Ref HITTInternetGateway # Reference to Internet Gateway -> HITTInternetGateway1
    # Create  Public Route Table,
  HITTPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref HITTVPC1 # Reference to VPC -> HITTVPC1
      Tags:
        - Key: Name # Tag Public Route Table Name
          Value: HITT-Public-Route-Table # Tag Value for HITT-Public-Route-Table more clear reading
  # Create  Public Route
  HITTPublicRoute:
    Type: AWS::EC2::Route
    #DependsOn: GatewayToInternet
    Properties:
      RouteTableId: !Ref HITTPublicRouteTable #Reference to Public Route Table
      DestinationCidrBlock: 0.0.0.0/0 # Connect to every distination to Internet
      GatewayId: !Ref HITTInternetGateway # Reference to Internet Gateway HITTInternetGateway1

  # Binding Public Subnet  to Public Route Table
  HITTPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref HITTPublicSubnet1 # Binding to Public Subnet 1
      RouteTableId: !Ref HITTPublicRouteTable #Binding to Public Route Table
  # Create Private Route Table,
  HITTPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref HITTVPC1 # Reference to VPC -> HITTVPC1
      Tags:
        - Key: Name # Tag Private Route Table Name
          Value: HITT-Private-Route-Table # Tag Value for HITT-Private-Route-Table more clear reading
  # Binding Private Subnet  to Private Route Table
  HITTPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref HITTPrivateSubnet1 # Binding to Public Subnet 1 for internal communication
      RouteTableId: !Ref HITTPrivateRouteTable #Binding to Public Route Table

  #Security Group for Public Subnet EC2 instances
  PublicSubnetEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Inbound and Outbound Rules for Public Subnet EC2 instances
      VpcId: !Ref HITTVPC1
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 # Inbound rules to allow only HTTPS from internet
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: 15.0.0.0/23 # Inbound rules to allow icmp ping for testing 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 15.0.0.0/23 # Inbound rules to allow ssh from Jump Host
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0 #Outbound rule to allow HTTPS for Public Subnet EC2 instances
      Tags:
        - Key: Name
          Value: Public EC2 Instance Security Group

  #Security Group for Private Subnet EC2 instances
  PrivateSubnetEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Inbound and Outbound Rules for Private Subnet EC2 instances
      VpcId: !Ref HITTVPC1
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 15.0.0.0/23 # Inbound rules to allow  HTTPS from public subnet
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 15.0.0.0/23 # Inbound rules to allow ssh from Jump Host
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: 15.0.0.0/23 # Inbound rules to allow icmp ping for testing 
      Tags:
        - Key: Name
          Value: Private EC2 Instance Security Group

  #Security Group for Public Subnet JUMP EC2 instances
  JUMPEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Inbound and Outbound Rules for Public Subnet Jump EC2 instances
      VpcId: !Ref HITTVPC1
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0 # Inbound rules to allow ssh from internet
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 15.0.18.0/22 # Outbound rule to ssh Private Subnet 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 15.0.0.0/23 # Outbound rule to ssh Public  Subnet 
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: 15.0.0.0/23 # Out rules to Public Subnet allow icmp ping for testing 
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: 15.0.18.0/22 # Out rules to Private Subnet allow icmp ping for testing
      Tags:
        - Key: Name
          Value: Jump Instanc Security Group

  #Public EC2 instance
  PubDemoEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParam
      ImageId: !Ref ImageIDParam
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: '0'
          GroupSet:
            - !Ref PublicSubnetEC2SecurityGroup
          SubnetId: !Ref HITTPublicSubnet1
      Tags:
        - Key: Name
          Value: Public EC2 Instance
  #Private EC2 instance
  PvtDemoEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParam
      ImageId: !Ref ImageIDParam
      NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeviceIndex: '0'
          GroupSet:
            - !Ref PrivateSubnetEC2SecurityGroup
          SubnetId: !Ref HITTPrivateSubnet1
      Tags:
        - Key: Name
          Value: Private EC2 Instance
  #Jump EC2 instance
  JmpDemoEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParam
      ImageId: !Ref ImageIDParam
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: '0'
          GroupSet:
            - !Ref JUMPEC2SecurityGroup
          SubnetId: !Ref HITTPublicSubnet1
      Tags:
        - Key: Name
          Value: Jump EC2 Instance